name: Production Infra Setup in Terraform

trigger: none

pool: 
 demands:
  - agent.name -equals ranjanofficeagent

parameters:
  - name: environment
    default: dev
    type: string
    values:
      - dev
      - prod 

stages:
  - stage: terraforminstallandinitfordev
    displayName: Terraform Installation and Initialization for Dev Environment
    jobs:
      - job: terraforminstalldev
        displayName: Terraform Install for Dev
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
      - job: terraforminitdev
        displayName: Terraform Initialization for Dev
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environment/dev'
              backendServiceArm: 'satishranjanwindowshost'
              backendAzureRmResourceGroupName: 'satishrg'
              backendAzureRmStorageAccountName: 'satishranstorage'
              backendAzureRmContainerName: 'satishcontainer'
              backendAzureRmKey: 'terraform.tfstate'
  - stage: tfplanfordev
    dependsOn: terraforminstallandinitfordev
    displayName: Terraform Plan
    jobs:
     - job: terraformplan
       displayName: Terraform plan
       steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environment/dev'
              backendServiceArm: 'satishranjanwindowshost'
              backendAzureRmResourceGroupName: 'satishrg'
              backendAzureRmStorageAccountName: 'satishranstorage'
              backendAzureRmContainerName: 'satishcontainer'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environment/dev'
              environmentServiceNameAzureRM: 'satishranjanwindowshost'
  # - stage: ManualApproval
  #   displayName: Manual Approval Needed
  #   jobs: 
  #   - job: ManualApprovalJob
  #     displayName: Manual Approval Job
  #     pool: server
  #     steps:
  #     - task: ManualValidation@1
  #       inputs:
  #         notifyUsers: 'satish.ranjan7183@gmail.com'
  #         instructions: 'Please validate the plan and continue'

  # - stage: terraforminstallationandinitforprod
  #   displayName: Terraform Installation and Initialization
  #   jobs:
  #     - job: terraforminstallation
  #       displayName: Terraform Installation
  #       steps:
  #        - task: TerraformInstaller@1
  #          inputs:
  #            terraformVersion: 'latest'
  #     - job: terraforminit
  #       displayName: Terraform Init
  #       steps:
  #         - task: TerraformTaskV4@4
  #           inputs:
  #             provider: 'azurerm'
  #             command: 'init'
  #             workingDirectory: '$(workdir)'
  #             backendServiceArm: 'satishranjanwindowshost'
  #             backendAzureRmResourceGroupName: 'satishrg'
  #             backendAzureRmStorageAccountName: 'satishranstorage'
  #             backendAzureRmContainerName: 'satishcontainer'
  #             backendAzureRmKey: 'terraform.tfstate'
  # - stage: terraformplanfordev
  #   dependsOn: terraforminstallationandinitfordev
  #   displayName: Terraform Plan
  #   jobs:
  #    - job: terraformplan
  #      displayName: Terraform plan
  #      steps:
  #         - task: TerraformTaskV4@4
  #           inputs:
  #             provider: 'azurerm'
  #             command: 'init'
  #             workingDirectory: '$(workdir)'
  #             backendServiceArm: 'satishranjanwindowshost'
  #             backendAzureRmResourceGroupName: 'satishrg'
  #             backendAzureRmStorageAccountName: 'satishranstorage'
  #             backendAzureRmContainerName: 'satishcontainer'
  #             backendAzureRmKey: 'terraform.tfstate'

  #         - task: TerraformTaskV4@4
  #           inputs:
  #             provider: 'azurerm'
  #             command: 'plan'
  #             workingDirectory: '$(workdir)'
  #             environmentServiceNameAzureRM: 'satishranjanwindowshost'              
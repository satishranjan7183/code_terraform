name: Production Infra Setup in Terraform

trigger: 
 - master

pool: 
 name: satishpool
 demands:
  - agent.name -equals satishagent

parameters:
  - name: environment
    default: 'dev'
    type: string
    values:
      - 'dev'
      - 'prod' 

variables:
 - group: workdirvg

stages:
# Implement SonarQube to Scane code quality
  - stage: codescan
    displayName: Sonarqube code Scan
    jobs:
     - job: 
       steps:
         - task: SonarQubePrepare@6
           inputs:
             SonarQube: 'satishsonarqubeapp'
             scannerMode: 'CLI'
             configMode: 'manual'
             cliProjectKey: 'satishsonarqube'
             cliProjectName: 'satishsonarqube'
             cliSources: '.'
         - task: SonarQubeAnalyze@6
           inputs:
             jdkversion: 'JAVA_HOME_17_X64'
         - task: SonarQubePublish@6
           inputs:
             pollingTimeoutSec: '300'
# Terraform Installation and Initialization Stage
  - stage: terraforminstallandinit${{parameters.environment}}
    displayName: Terraform Installation and Initialization for ${{parameters.environment}}
    jobs:
      - job: terraforminstall
        displayName: Terraform Install
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
      - job: terraforminit
        displayName: Terraform Initialization
        dependsOn: terraforminstall
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(workdir)/${{parameters.environment}}'
              backendServiceArm: 'satishranjanwindowshost'
              backendAzureRmResourceGroupName: 'satishrg'
              backendAzureRmStorageAccountName: 'satishranstorage'
              backendAzureRmContainerName: 'satishcontainer'
              backendAzureRmKey: 'terraform.tfstate'

# Terraform Plan Stage
  - stage: tfplan${{parameters.environment}}
    dependsOn: terraforminstallandinit${{parameters.environment}}
    displayName: Terraform Plan for ${{parameters.environment}}
    jobs:
     - job: terraformplan
       displayName: Terraform plan
       steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(workdir)/${{parameters.environment}}'
              backendServiceArm: 'satishranjanwindowshost'
              backendAzureRmResourceGroupName: 'satishrg'
              backendAzureRmStorageAccountName: 'satishranstorage'
              backendAzureRmContainerName: 'satishcontainer'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(workdir)/${{parameters.environment}}'
              environmentServiceNameAzureRM: 'satishranjanwindowshost'
 # Manual Approval Stage before Apply
  - stage: ManualApproval${{parameters.environment}}
    displayName: Manual Approval Needed for ${{parameters.environment}}
    jobs: 
    - job: ManualApprovalJob
      displayName: Manual Approval Job
      pool: server
      steps:
      - task: ManualValidation@1
        inputs:
          notifyUsers: 'satish.ranjan7183@gmail.com'
          instructions: 'Please validate the plan and continue'
# Apply Stage Once Appoval Done
  - stage: terraformplan${{parameters.environment}}
    dependsOn: ManualApproval${{parameters.environment}}
    displayName: Terraform Apply for ${{parameters.environment}}
    jobs:
     - job: terraformapply
       displayName: Terraform Apply
       steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(workdir)/${{parameters.environment}}'
              backendServiceArm: 'satishranjanwindowshost'
              backendAzureRmResourceGroupName: 'satishrg'
              backendAzureRmStorageAccountName: 'satishranstorage'
              backendAzureRmContainerName: 'satishcontainer'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(workdir)/${{parameters.environment}}'
              environmentServiceNameAzureRM: 'satishranjanwindowshost'              
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(workdir)/${{parameters.environment}}'
              environmentServiceNameAzureRM: 'satishranjanwindowshost'
 